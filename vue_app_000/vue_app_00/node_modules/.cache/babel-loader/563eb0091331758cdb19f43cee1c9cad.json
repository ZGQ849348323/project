{"remainingRequest":"F:\\团队项目\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!F:\\团队项目\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\团队项目\\vue_app_000\\vue_app_00\\src\\components\\xz\\Product.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\团队项目\\vue_app_000\\vue_app_00\\src\\components\\xz\\Product.vue","mtime":1564735199893},{"path":"F:\\团队项目\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"F:\\团队项目\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"F:\\团队项目\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //商品列表数组\n      pno: 0 //页码（第几页）\n\n    };\n  },\n  methods: {\n    jumpCart: function jumpCart() {\n      //查看购物车\n      this.$router.push(\"/Cart\");\n    },\n    addCart: function addCart(e) {\n      var _this = this;\n\n      //功能：将商品添加到购物车\n      var lid = e.target.dataset.lid;\n      var n = e.target.dataset.lname;\n      var p = e.target.dataset.price; //2： 发送ajax请求\n      // 2.1：请求服务器地址\n\n      var url = \"addcart\"; // 2.2：请求参数\n\n      var obj = {\n        lid: lid,\n        lname: n,\n        price: p\n      }; // 3：获取返回的结果\n\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        if (res.data.code == -1) {\n          // 3.1：如果-1提示用户登入\n          _this.$toast(\"请先登入在购买商品\");\n        } else {\n          // 3.2：如果1提示用户添加成功\n          _this.$toast(\"添加成功\");\n        }\n      });\n    },\n    loadMore: function loadMore() {\n      var _this2 = this;\n\n      //功能商品分页数据\n      // 1：发送请求\n      var url = \"product\"; // if((this.pno++)>10){\n      // \treturn\n      // }\n\n      this.pno++;\n      var obj = {\n        pno: this.pno\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        // 2：获取服务器返回结果\n        // console.log(res.data.data)\n        // 3：将返回结果保存\n        // this.list=res.data.data;\n        // 4：拼接多页内容\n        var rows = _this2.list.concat(res.data.data); // 5：将结果赋值list\n\n\n        _this2.list = rows;\n      });\n    }\n  },\n  created: function created() {\n    var a = this.loadMore();\n    console.log(\"121323\");\n  }\n};",{"version":3,"sources":["Product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA,EADA;AACA;AACA,WAAA,CAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,WAAA;AACA,YADA,sBACA;AACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA,KAJA;AAKA,WALA,mBAKA,CALA,EAKA;AAAA;;AACA;AACA,UAAA,MAAA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA;AACA,UAAA,IAAA,EAAA,MAAA,CAAA,OAAA,CAAA,KAAA;AACA,UAAA,IAAA,EAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAJA,CAKA;AACA;;AACA,UAAA,MAAA,SAAA,CAPA,CAQA;;AACA,UAAA,MAAA;AAAA,aAAA,GAAA;AAAA,eAAA,CAAA;AAAA,eAAA;AAAA,OAAA,CATA,CAUA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,eAAA;AACA,YAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA;AACA,gBAAA,MAAA,CAAA,WAAA;AACA,SAHA,MAGA;AACA;AACA,gBAAA,MAAA,CAAA,MAAA;AACA;AACA,OARA;AASA,KAzBA;AA0BA,YA1BA,sBA0BA;AAAA;;AACA;AACA;AACA,UAAA,MAAA,SAAA,CAHA,CAIA;AACA;AACA;;AACA,WAAA,GAAA;AACA,UAAA,MAAA;AAAA,aAAA,KAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAA,OAAA,OAAA,IAAA,CAAA,MAAA,CAAA,IAAA,IAAA,CAAA,IAAA,CAAA,CANA,CAOA;;;AACA,eAAA,IAAA,GAAA,IAAA;AACA,OATA;AAUA;AA7CA,GAPA;AAsDA,SAtDA,qBAsDA;AACA,QAAA,IAAA,KAAA,QAAA,EAAA;AACA,YAAA,GAAA,CAAA,QAAA;AACA;AAzDA,CAAA","sourcesContent":["<template>\r\n\t<div class=\"product-app\">\r\n\t\t<!-- Product.vue -->\r\n\t\t<!-- 一个商品 循环-->\r\n\t\t<div class=\"goods-item\" v-for=\"(item,i) of list\" :key=\"i\">\r\n\t\t\t<img :src=\"'http://127.0.0.1:3000/'+item.img_url\" />\r\n\t\t\t<h4>{{item.lname}}</h4>\r\n\t\t\t<div class=\"info\">\r\n\t\t\t\t{{item.price}}\r\n\t\t\t</div>\r\n\t\t\t<mt-button @click=\"addCart\" :data-lid=\"item.lid\" :data-price=\"item.price\" :data-lname=\"item.lname\">加入购物车</mt-button>\r\n\t\t</div>\r\n\t\t<mt-button @click=\"jumpCart\" type=\"primary\" size=\"large\">查看购物车</mt-button>\r\n\t\t<!-- 加载更多按钮 -->\r\n\t\t<mt-button type=\"primary\" size=\"large\" @click=\"loadMore\">加载更多</mt-button>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n\tdata(){\r\n\t\treturn{\r\n\t\t\tlist:[], //商品列表数组\r\n\t\t\tpno:0,\t//页码（第几页）\r\n\t\t}\r\n\t},\r\n\tmethods:{\r\n\t\tjumpCart(){\r\n\t\t\t//查看购物车\r\n\t\t\tthis.$router.push(\"/Cart\")\r\n\t\t},\r\n\t\taddCart(e){\r\n\t\t\t//功能：将商品添加到购物车\r\n\t\t\tvar lid =e.target.dataset.lid;\r\n\t\t\tvar n   =e.target.dataset.lname;\r\n\t\t\tvar p   =e.target.dataset.price;\r\n\t\t\t//2： 发送ajax请求\r\n\t\t\t// 2.1：请求服务器地址\r\n\t\t\tvar url = \"addcart\";\r\n\t\t\t// 2.2：请求参数\r\n\t\t\tvar obj = {lid:lid,lname:n,price:p};\r\n\t\t\t// 3：获取返回的结果\r\n\t\t\tthis.axios.get(url,{params:obj}).then(res=>{\r\n\t\t\t\tif(res.data.code == -1){\r\n\t\t\t\t// 3.1：如果-1提示用户登入\r\n\t\t\t\t\tthis.$toast(\"请先登入在购买商品\")\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// 3.2：如果1提示用户添加成功\r\n\t\t\t\t\tthis.$toast(\"添加成功\")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tloadMore(){\r\n\t\t\t//功能商品分页数据\r\n\t\t\t// 1：发送请求\r\n\t\t\tvar url=\"product\";\r\n\t\t\t// if((this.pno++)>10){\r\n\t\t\t// \treturn\r\n\t\t\t// }\r\n\t\t\tthis.pno++;\r\n\t\t\tvar obj= {pno:this.pno}\r\n\t\t\tthis.axios.get(url,{params:obj}).then(res=>{\r\n\t\t\t\t// 2：获取服务器返回结果\r\n\t\t\t\t// console.log(res.data.data)\r\n\t\t\t// 3：将返回结果保存\r\n\t\t\t// this.list=res.data.data;\r\n\t\t\t// 4：拼接多页内容\r\n\t\t\tvar rows=this.list.concat(res.data.data);\r\n\t\t\t// 5：将结果赋值list\r\n\t\t\tthis.list=rows;\r\n\t\t\t})\r\n\t\t},\r\n\t},\r\n\tcreated() {\r\n\t\tvar a=this.loadMore();\r\n\t\tconsole.log(\"121323\")\r\n\t},\r\n}\r\n</script>\r\n<style scoped>\r\n\t/* 1：在外层样式 */\r\n\t.product-app{\r\n\t\tdisplay:flex;  /*指定当前元素时弹性布局*/\r\n\t\tflex-wrap: wrap;\t/*指定子元素换行*/\r\n\t\tjustify-content: space-between; /*指定子元素两端对齐*/\r\n\t\tpadding: 4px;\r\n\t}\r\n\t/* 2：修饰商品样式 */\r\n\t.goods-item{\r\n\t\twidth:49%;  /*指定商品元素的宽度*/\r\n\t\tborder: 1px solid #ccc;   /*商品外灰色边框*/\r\n\t\tborder-radius: 5px;  /*指定元素的圆角*/\r\n\t\tmargin: 2px 0;\t/*外边距*/\r\n\t\tpadding: 2px;\t/*内边距*/\r\n\t\tbox-sizing: border-box;\t/*重新计算宽度*/\r\n\t\tdisplay: flex;\t/*弹性布局*/\r\n\t\tflex-direction: column;\t/*指定子元素排列方式*/\r\n\t\tmin-height: 247px;\t/*排列高度*/\r\n\t}\r\n\t/* 3：修饰商品图片样式 */\r\n</style\te>"],"sourceRoot":"src\\components\\xz"}]}